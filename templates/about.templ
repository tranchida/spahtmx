package templates

templ About() {
	<title>A propos - SPA HTMX</title>
    <div class="bg-white rounded-xl shadow-2xl p-8 animate-fade-in">
        <h1 class="text-4xl font-bold text-primary mb-6">À propos</h1>
        <p class="text-gray-700 text-lg mb-6">Cette application démontre l'utilisation de HTMX avec Go pour créer une Single Page Application.</p>

        <div class="bg-gray-50 rounded-lg p-6 border-l-4 border-primary mb-6">
            <h2 class="text-2xl font-bold text-secondary mb-4">Technologies utilisées</h2>
            <ul class="space-y-3 ml-6">
                <li class="text-gray-700">
                    <strong class="text-primary">Go</strong> - Langage backend et serveur HTTP
                </li>
                <li class="text-gray-700">
                    <strong class="text-primary">Gorm</strong> - ORM pour Go
                </li>
                <li class="text-gray-700">
                    <strong class="text-primary">HTMX</strong> - Interactions dynamiques sans JavaScript complexe
                </li>
                <li class="text-gray-700">
                    <strong class="text-primary">Templ</strong> - Système de templates compilé en Go
                </li>
                <li class="text-gray-700">
                    <strong class="text-primary">Tailwind CSS</strong> - Framework CSS utility-first pour un design moderne
                </li>
            </ul>
        </div>

        <div class="bg-gray-50 rounded-lg p-6 border-l-4 border-secondary">
            <h2 class="text-2xl font-bold text-secondary mb-4">Avantages de cette approche</h2>
            <ul class="space-y-3 ml-6">
                <li class="text-gray-700 flex items-start">
                    <svg class="w-6 h-6 text-secondary mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                    </svg>
                    Simplicité du code
                </li>
                <li class="text-gray-700 flex items-start">
                    <svg class="w-6 h-6 text-secondary mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                    </svg>
                    Performance optimale
                </li>
                <li class="text-gray-700 flex items-start">
                    <svg class="w-6 h-6 text-secondary mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                    </svg>
                    SEO-friendly avec le rendu côté serveur
                </li>
                <li class="text-gray-700 flex items-start">
                    <svg class="w-6 h-6 text-secondary mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                    </svg>
                    Expérience utilisateur fluide
                </li>
            </ul>
        </div>
    </div>

    <style>
    @keyframes fade-in {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .animate-fade-in {
        animation: fade-in 0.3s ease-in;
    }
    </style>
}
